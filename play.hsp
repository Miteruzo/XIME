;*******************************************************************************
; フヮイル名 : mod_xime.as
; 更新年月日 : 平29/10/08
; 作成者     : Taker32X
; 作成年月日 : 不明
; 機能       : コンパイルせられた中間言語を解釋し、再生する。
;*******************************************************************************

#const MAJOR_VER 1
#const MINOR_VER 0
#const PATCH_VER 5
#define VERSION_NUMBER (StrF("%%d.%%d.%%d.%%d",MAJOR_VER,MINOR_VER,PATCH_VER,build_num))
#define PROJECT_NAME ("xime")

#ifdef _DEBUG

*Build
	Exist PROJECT_NAME+"_ver
	If strsize!=-1{
		NoteSel work
			NoteLoad PROJECT_NAME+"_ver
		NoteUnsel
		work=Str(Int(work)+1)
	}Else{
		work="1
	}
	NoteSel work
		NoteSave PROJECT_NAME+"_ver
	NoteUnsel
	build_num=Int(work)

#else

	build_num=44

#endif

#runtime "hsp3c
#packopt hide 1
#packopt name "mmlplay
#packopt icon "mmlplay.ico
#packopt version "version_play.txt
#packopt lang "1041
#packopt upx 1

#define THE_TIME (gettime(7)+gettime(6)*1000+gettime(5)*60000+gettime(4)*3600000)

#uselib "winmm
#func midiOutOpen "midiOutOpen" var,int,int,int,int
#func midiOutShortMsg "midiOutShortMsg" int,int
#func midiOutReset "midiOutReset" int
#func midiOutClose "midiOutClose" int

#uselib "kernel32
#func CreateFileMapping "CreateFileMappingA" sptr,sptr,sptr,sptr,sptr,str
#cfunc GetLastError "GetLastError"
#func MapViewOfFile "MapViewOfFile" sptr,sptr,sptr,sptr,sptr
#func UnmapViewOfFile "UnmapViewOfFile" sptr
#func CloseHandle "CloseHandle" sptr

#const FILE_MAP_WRITE $02
#const FILE_MAP_READ $04
#const PAGE_READWRITE $04
#const ERROR_ALREADY_EXISTS $B7

	CreateFileMapping -1,0,PAGE_READWRITE,0,4,"mod_xime_fo
	handle_fo=stat
	MapViewOfFile handle_fo,FILE_MAP_WRITE,0,0,0
	pointer_fo=stat
	DupPtr fadeout,pointer_fo,4,VarType("int")
	fadeout=0

	midiOutOpen midi_handle,-1,0,0,0
	onerror *wopari
	run_="mmlplay
	run__=""
	pode=1
	sdim cline,,3
	cline=dir_cmdline
	repeat 26
		strrep cline,strf("%c",'A'+cnt),strf("%c",'a'+cnt)
	loop
	split cline,"\"",cline
	jed=stat
	sdim par
	sdim disp2
	for i,0,strlen(cline)
		sdim disp2
		char=strmid(cline,i,1)
		if char=="/"{
			par="
			repeat strlen(cline)
				char=strmid(cline,i+cnt+1,1)
				if 'a'<=peek(char,0)&&peek(char,0)<='z'{
					par+char
				}else{
					i+cnt
					break
				}
			loop
			if par=="s"{
;				exist run_
;				if strsize!=-1: delete run_
				unkorean=dir_cmdline
				Split unkorean,"\"",cline
				CreateFileMapping -1,0,PAGE_READWRITE,0,4,"mod_xime_exist_"+cline(1)
				handle_exist=stat
				MapViewOfFile handle_exist,FILE_MAP_WRITE,0,0,0
				pointer_exist=stat
				DupPtr mmlplay_exist,pointer_exist,4,VarType("int")
				mmlplay_exist=0
				end
			}
			if par=="o"{
				no="
				repeat
					char=strmid(cline,i+cnt+1,1)
					if peek(char,0)>='0'&&peek(char,0)<='9'{
						no+char
					}else{
						i+cnt
						break
					}
				loop
;				bsave "fadeout",no,strlen(no)
				fadeout=Int(no)
				end
			}
		}
		par="/"+par
		split cline,par,disp
		repeat stat
			disp2+disp(cnt)
		loop
	next
	cline=strtrim(disp2,0,' ')
	if jed==1: cline(1)=cline(0)
	onexit *wopari
	if dir_cmdline==""{
		bgscr 0,1,1,0,0,0
		title "Error
		dialog "このプログラムは單體では動作しません。",1,"Error
		goto *wopari
	}
;	sDim work,8
;	bLoad cline(1),work,8
;	DupPtr sheet,lPeek(work,0),lPeek(work,4),2
;	notesel sheet
;		noteload cline(1)
;		Exist cline(1)
;		put_byte=strsize
		CreateFileMapping -1,0,PAGE_READWRITE,0,4,"mod_xime_exist_"+cline(1)
		handle_exist=stat
		if GetLastError()!=ERROR_ALREADY_EXISTS{
			bgscr 0,1,1,0,0,0
			title "Error
			dialog "このプログラムは單體では動作しません。\n「"+cline(1)+"」",1,"Error
			goto *wopari
		}
		MapViewOfFile handle_exist,FILE_MAP_WRITE,0,0,0
		pointer_exist=stat
		DupPtr mmlplay_exist,pointer_exist,4,VarType("int")
	
		CreateFileMapping -1,0,PAGE_READWRITE,0,4,"mod_xime_byte_"+cline(1)
		handle_byte=stat
		MapViewOfFile handle_byte,FILE_MAP_WRITE,0,0,0
		pointer_byte=stat
		DupPtr mmlplay_byte,pointer_byte,4,VarType("int")
		If mmlplay_byte==0{
			GoTo *wopari
		}
	
		CreateFileMapping -1,0,PAGE_READWRITE,0,mmlplay_byte,"mod_xime_data_"+cline(1)
		handle_data=stat
		MapViewOfFile handle_data,FILE_MAP_WRITE,0,0,0
		pointer_data=stat
		DupPtr mmlplay_data,pointer_data,mmlplay_byte,VarType("str")

		put_byte=mmlplay_byte
		sDim sheet,put_byte
;		bLoad cline(1),sheet,put_byte
		MemCpy sheet,mmlplay_data,put_byte
;		exist run_
;		if strsize==-1{
;			bsave run_,run__,strlen(run__)
;		}
		mmlplay_exist=1
		repeat 16
			midiOutShortMsg midi_handle,$c0 or cnt
		loop
		volume_=1.0
		volume=volume_
;		fadeout=""
		fochk=0
		start_time=THE_TIME
		dim time_,128
		for i,0,put_byte/11
;			noteget code,i
;			if code=="": _continue
;			split code,":",time,ch,no,velocity
			time=lPeek(sheet,i*11)
			ch=Peek(sheet,i*11+4)and$0F
			no=Peek(sheet,i*11+5)
			velocity=Peek(sheet,i*11+6)
			Switch (Peek(sheet,i*11+4)and$F0)>>4
				Case 1
					midiOutShortMsg midi_handle,$C0 or ch or(no<<8)
					SwBreak
				Case 2
					midiOutShortMsg midi_handle,$B0 or ch or($0A<<8)or(no<<16)
					SwBreak
				Case 3
/*					goto_=0+no
					start_time+time
					repeat notemax
						noteget code,cnt
						if code==""{
							continue
						}
						split code,":",time,ch,no,velocity
						if goto_<=time{
							i=cnt-1
							break
						}
					loop
					_continue	*/
					SwBreak
				Default
					repeat
						now_time=THE_TIME
						if (now_time-start_time)>=time{
							if velocity{
								midiOutShortMsg midi_handle,$90 or ch or(no<<8)or(($ff and volume*velocity)<<16)
							}else{
								midiOutShortMsg midi_handle,$80 or ch or(no<<8)
							}
							break
						}
				/*		if ch==1{
							if velocity: time_(no)=0+time : else: if time_(no)=0{
								beep 0+powf(2,double(no-69)/12)*440,0+time-time_-1
								await 1
							}else{
								await time_(no)
							}
						}*/
						if times!=time{
;							exist run_
;							if strsize==-1: goto *wopari
							If mmlplay_exist==0: goto *wopari
							if fochk==0{
/*								exist "fadeout
								if strsize!=-1{
									fadeout=""
									notesel fadeout
										noteload "fadeout
									NoteUnsel
									delete "fadeout
									fadeout=0+fadeout
									if fadeout: fadeout=1.0/fadeout
									fotime=now_time-start_time
									fochk=1
								}*/
								If fadeout{
									fadeout_=1.0/fadeout
									fotime=now_time-start_time
									fochk=1
								}
							}
						}
						if fochk: volume=volume_-fadeout_*(now_time-start_time-fotime)
						if volume<=0: goto *wopari
						await 1
					loop
					SwBreak
			SwEnd
			times=0+time
			if volume<=0.0: goto *wopari
		next
;	NoteUnsel
	wait 10

*wopari
	if err: dialog "An error has occurred. ("+err+")",1,"Error"
	onerror 0
;	exist run_
;	if strsize!=-1: delete run_
	mmlplay_exist=0
;	exist "fadeout
;	if strsize!=-1: delete "fadeout
	midiOutReset midi_handle
	midiOutClose midi_handle
	end
